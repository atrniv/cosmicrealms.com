<h2 style="text-decoration: underline;">2014 UPDATE</h2>
<p>I have updated this post here: <a href="http://cosmicrealms.com/blog/2014/08/29/benchmark-of-node-dot-js-json-validation-modules-part-3/">Benchmark of node.js JSON Validation Modules Part 3</a></p>
<br>
<h3>Old Post</h3>
<p>I need to validate JSON in a node.js project I am working on.</p>
<p>Speed is critical in my project, so I decided to benchmark several node.js JSON validation modules.</p>
<p>I only included modules that support the JSON schema described here: <a href="http://json-schema.org/">http://json-schema.org/</a></p>
<p style="margin-bottom: 0;">The following modules were benchmarked:</p>
<ul>
   <li><a href="https://github.com/kriszyp/json-schema">https://github.com/kriszyp/json-schema</a></li>
   <li><a href="https://github.com/akidee/schema.js">https://github.com/akidee/schema.js</a></li>
   <li><a href="https://github.com/garycourt/JSV">https://github.com/garycourt/JSV</a></li>
</ul>
<p>Two JSON objects and schemas were used, one basic and one advanced. The source code for these are at the bottom of this post.</p>
<p>Due to varying module support, I had to create both a v2 and v3 schema document.</p>
<h3>Results</h3>
<div id="basicResults"></div>
<script>
	$(document).ready(function() {
		new Highcharts.Chart(
			{
				chart :
				{
					renderTo : "basicResults",
					defaultSeriesType : "column",
					backgroundColor : "transparent"
				},
				credits : { enabled : false },
				title : { text : "10,000 Iterations - Basic Object" },
				xAxis : { categories : [ "JSV (v2)", "JSV (v3)", "schema (v2)", "json-schema (v3)" ] },
				yAxis : { title : { text : "Time Per Validation" } },
				legend : { enabled : false },
				tooltip :
				{
					formatter : function()
					{
						return "<b>" + this.x + "</b><br/>" + "Time Per Validation: " + this.y + "ms";
					}
				},
				series :
				[{
					data : [ 0.45, 0.49, 0.03, 0.01 ],
					dataLabels : 
					{
						enabled : true,
						formatter : function()
						{
							return this.y + "ms";
						},
						style : { fontWeight : "bold" }
					}
				}]
			});
	});
</script>
<br>
<br>
<br>
<div id="advancedResults"></div>
<script>
	$(document).ready(function() {
		new Highcharts.Chart(
			{
				chart :
				{
					renderTo : "advancedResults",
					defaultSeriesType : "column",
					backgroundColor : "transparent"
				},
				credits : { enabled : false },
				title : { text : "10,000 Iterations - Advanced Object" },
				xAxis : { categories : [ "JSV (v2)", "JSV (v3)", "schema (v2)", "json-schema (v3)" ] },
				yAxis : { title : { text : "Time Per Validation" } },
				legend : { enabled : false },
				tooltip :
				{
					formatter : function()
					{
						return "<b>" + this.x + "</b><br/>" + "Time Per Validation: " + this.y + "ms";
					}
				},
				series :
				[{
					data : [ 2.21, 2.27, 0.08, 0.09 ],
					dataLabels : 
					{
						enabled : true,
						formatter : function()
						{
							return this.y + (this.y===0.1 ? "0" : "") + "ms";
						},
						style : { fontWeight : "bold" }
					}
				}]
			});
	});
</script>
<br>
<br>
<h3>Conclusion</h3>
<p>Looks like JSV is the slowest, even more so when dealing with V3 of the JSON schema. Also note that we are using a pre-processed JSV JSON schema. When that wasn't used, JSV was an additional 20 times slower.</p>
<p>So easy conclusion right? Use json-schema or schema as they are the fastest?</p>
<p>Well, it turns out that  bothjson-schema and schema lack supprt for serveral properties mentioned in the spec such as divisibleBy, uniqueItems and format.</p>
<p>For my project I'm not currently using any unsupported properties, so I'll be choosing json-schema for it's speed.</p>
<p>In the future if I need to use an unsupported property, I can always just add it to json-schema myself and send a pull request :)</p>
<h3>Modules not used</h3>
<p style="margin-bottom: 0;">These modules were NOT tested due to each having a custom JSON schema format:</p>
<ul>
	<li><a href="https://github.com/observing/gatekeeper">https://github.com/observing/gatekeeper</a>
	<li><a href="https://github.com/zzdhidden/EVE">https://github.com/zzdhidden/EVE</a>
	<li><a href="http://doffm.github.com/Onvalid/onvalid.html">http://doffm.github.com/Onvalid/onvalid.html</a>
	<li><a href="https://github.com/Baggz/Amanda">https://github.com/Baggz/Amanda</a>
</ul>
<p style="margin-bottom: 0;">Lastly this module was also not tested because it lacks support for the 'required' attribute:</p>
<ul><li><a href="https://github.com/onirame/json-validate">https://github.com/onirame/json-validate</a></li></ul>
<h3>Source Code</h3>
<p>Here are the JSON data objects and schema used for the benchmarks:</p>
<script src="http://gist.github.com/1608305.js"></script>
